/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  NotificationCreateInput as PrismaNotificationCreateInput,
} from "@prisma/client";

export class NotificationCreateInputServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.NotificationCreateInputCountArgs, "select">
  ): Promise<number> {
    return this.prisma.notificationCreateInput.count(args);
  }

  async notificationCreateInputs(
    args: Prisma.NotificationCreateInputFindManyArgs
  ): Promise<PrismaNotificationCreateInput[]> {
    return this.prisma.notificationCreateInput.findMany(args);
  }
  async notificationCreateInput(
    args: Prisma.NotificationCreateInputFindUniqueArgs
  ): Promise<PrismaNotificationCreateInput | null> {
    return this.prisma.notificationCreateInput.findUnique(args);
  }
  async createNotificationCreateInput(
    args: Prisma.NotificationCreateInputCreateArgs
  ): Promise<PrismaNotificationCreateInput> {
    return this.prisma.notificationCreateInput.create(args);
  }
  async updateNotificationCreateInput(
    args: Prisma.NotificationCreateInputUpdateArgs
  ): Promise<PrismaNotificationCreateInput> {
    return this.prisma.notificationCreateInput.update(args);
  }
  async deleteNotificationCreateInput(
    args: Prisma.NotificationCreateInputDeleteArgs
  ): Promise<PrismaNotificationCreateInput> {
    return this.prisma.notificationCreateInput.delete(args);
  }
}
