/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  UserInterestDto as PrismaUserInterestDto,
} from "@prisma/client";

export class UserInterestDtoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserInterestDtoCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userInterestDto.count(args);
  }

  async userInterestDtos(
    args: Prisma.UserInterestDtoFindManyArgs
  ): Promise<PrismaUserInterestDto[]> {
    return this.prisma.userInterestDto.findMany(args);
  }
  async userInterestDto(
    args: Prisma.UserInterestDtoFindUniqueArgs
  ): Promise<PrismaUserInterestDto | null> {
    return this.prisma.userInterestDto.findUnique(args);
  }
  async createUserInterestDto(
    args: Prisma.UserInterestDtoCreateArgs
  ): Promise<PrismaUserInterestDto> {
    return this.prisma.userInterestDto.create(args);
  }
  async updateUserInterestDto(
    args: Prisma.UserInterestDtoUpdateArgs
  ): Promise<PrismaUserInterestDto> {
    return this.prisma.userInterestDto.update(args);
  }
  async deleteUserInterestDto(
    args: Prisma.UserInterestDtoDeleteArgs
  ): Promise<PrismaUserInterestDto> {
    return this.prisma.userInterestDto.delete(args);
  }
}
